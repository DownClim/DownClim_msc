```{r setup}
#| include: false
library(tidyverse)
```

# Evaluations {.unnumbered}

<https://esd.copernicus.org/articles/11/537/2020/>

For every projection we extracted histograms before and after downscaling in the evaluation period that we compared to the observations distribution. We further computed for every projection evaluations metrics against observed before and after downscaling against observations in the evaluation period. Evaluation metrics include Pearson's correlation coefficient (CC), root mean square error (RMSE), standard deviation of errors (SDE), and mean bias (bias).

## Histograms

The effect of downscaling on histograms of temperature at surface was very country dependant. In Côte d'Ivoire, histograms of temperature at surface revealed more spread distribution of temperature for raw CMIP6 and CORDEX projections compared to CHELSA 2, that downscaling correctly gathered and piked. However, both downscaling included a low temperature that CORDEX raw distributions were lacking. Similarly in French Guiana, histograms of temperature at surface revealed even more spread distribution of temperature for raw CMIP6 and CORDEX projections compared to CHELSA 2, that downscaling correctly gathered and piked. Oppositely in New Caledonia, histograms of temperature at surface revealed narrower distribution of temperature for raw CMIP6 projections compared to CHELSA 2, that downscaling correctly spread. Downscaling also extended the low temperature distribution of CORDEX, which was already pretty well distributed for high values.

```{r hist_tas}
#| message: false
#| warning: false
#| fig-cap: "Histograms of mean monthlys temperature at surface (tas, °C) for all projections of CMIP6 and CORDEX before and after downscaling compared to CHELSA 2. Bar colours indicate the month."
vroom::vroom("results/evaluation/histograms.tsv") %>% 
  filter(variable == "tas") %>% 
  group_by(origin, type, area, month) %>% 
  mutate(density = count / sum(count)) %>% 
  ggplot(aes(bin, density, 
             fill = as.factor(month),
             col = as.factor(month))) +
  geom_col() +
  theme_bw() +
  facet_grid(area ~ paste(origin, type)) +
  theme(axis.title = element_blank()) +
  ggtitle("Mean monthly temperature at surface (tas, °C)") +
  scale_fill_viridis_d("", direction = -1,
                       labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
  scale_color_viridis_d("",  direction = -1,
                        labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r hist_pr}
#| message: false
#| warning: false
#| fig-cap: "Histograms of total monthlys precipitaiton (pr, mm) for all projections of CMIP6 and CORDEX before and after downscaling compared to CHELSA 2. Bar colours indicate the month."
vroom::vroom("results/evaluation/histograms.tsv") %>% 
  filter(variable == "pr") %>% 
  group_by(origin, type, area, month) %>% 
  mutate(density = count / sum(count)) %>% 
  # filter(bin < 500) %>% 
  ggplot(aes(bin, density, 
             fill = as.factor(month),
             col = as.factor(month))) +
  geom_col() +
  theme_bw() +
  facet_grid(area ~ paste(origin, type)) +
  theme(axis.title = element_blank()) +
  ggtitle("Total monthly precipitation (pr, mm)") +
  scale_fill_viridis_d("", direction = -1,
                       labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
  scale_color_viridis_d("",  direction = -1,
                        labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r fig1}
#| message: false
#| warning: false
#| fig-cap: " Caption"
g <- vroom::vroom("results/evaluation/histograms.tsv") %>% 
  filter(variable %in% c("tas", "pr")) %>% 
  group_by(variable, origin, type, area, bin) %>% 
  summarise(count = sum(count)) %>% 
  group_by(variable, origin, type, area) %>% 
  mutate(density = count / sum(count)) %>%
  arrange(variable, origin, type, area, bin) %>% 
  mutate(density_l = lag(density)) %>% 
  mutate(density_h = lead(density)) %>% 
  rowwise() %>% 
  filter(bin < 500) %>% 
  mutate(area = gsub("-", " ", area)) %>% 
  mutate(variable = recode(variable,
                           "tas" = "Mean monthly temperature at surface (°C)",
                           "pr" = "Total monthly precipitation (mm)")) %>% 
  mutate(type = ifelse(origin == "chelsa2", "", type)) %>% 
  mutate(origin = recode(origin, "chelsa2" = "CHELSA 2")) %>% 
  mutate(density_sm = mean(c(density_l, density, density_h), na.rm = T)) %>% 
  ggplot(aes(x = bin, y = density, 
             col = paste0(origin," ",type),
             fill = paste0(origin," ",type))) +
  geom_line() +
  theme_bw() +
  facet_grid(area ~ variable, scales = "free_x") +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_color_discrete("") +
  scale_fill_discrete("") +
  scale_x_sqrt() +
  scale_y_sqrt()
ggsave("figures/f01.png", g, dpi = 300, width = 8, height = 5, bg = "white")
g
```

<!-- Evaluations metrics revealed that raw CORDEX projections were globally outperforming raw CMIP6 projections for all variables with higher correlations with observations (CC of 0.64 and 0.56 for CORDEX temperature and precipitation against 0.37 and 0.45 for CMIP6) and lower error (RMSE of 1.26 °C and 65 mm for CORDEX temperature and precipitation against 1.62 °C and 64 mm for CMIP6). However after downscaling, downscaled CMIP6 projections were equal or slightly outperforming downscaled CORDEX projections for all variables with higher correlations with observations (CC of 0.996 and 0.980 for CMIP6 temperature and precipitation against 0.995 and 0.941 for CORDEX) and lower error (RMSE of 0.40 °C and 20 mm for CMIP6 temperature and precipitation against 0.54 °C and 27 mm for CORDEX). We observed no significant differences between experiments are 2.6 and 8.5 forcing are not very different on the evaluation period (before 2020). We observed small differences among months but with the same global pattern. -->

## CHELSA2

### Precipitation

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "pr") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against CHELSA2 precipitation (mm)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "pr") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against CHELSA2 precipitation (mm)")
```

### Mean temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tas") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against CHELSA2 mean temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tas") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against CHELSA2 mean temperature (°C)")
```

### Maximum temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tasmax") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against CHELSA2 maximum temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tasmax") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against CHELSA2 maximum temperature (°C)")
```

### Minimum temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tasmin") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against CHELSA2 minimum temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chelsa2", variable == "tasmin") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against CHELSA2 minimum temperature (°C)")
```

## CHIRPS

### Precipitation

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chirps") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against CHIRPS precipitation (mm)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "chirps") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against CHIRPS precipitation (mm)")
```

## GSHTD

### Mean temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tas") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against GSHTD mean temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tas") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against GSHTD mean temperature (°C)")
```

### Maximum temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tasmax") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against GSHTD maximum temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tasmax") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against GSHTD maximum temperature (°C)")
```

### Minimum temperature

```{r }
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tasmin") %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(area ~ paste(origin, type)) +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  ggtitle("Evaluation against GSHTD minimum temperature (°C)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D"))
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(base_eval == "gshtd", variable == "tasmin") %>% 
  ggplot(aes(area, value, fill = paste(origin, type))) +
  geom_boxplot() +
  facet_wrap(~ metric, scales = "free_x") +
  coord_flip() +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Evaluation against GSHTD minimum temperature (°C)")
```

## All

```{r fig2}
#| message: false
#| warning: false
#| fig-cap: "caption."
g <- vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(paste(base_eval, variable) %in% c("gshtd tas", "chirps pr")) %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  mutate(variable = recode(variable, "pr" = "CHIRPS", "tas" = "GSHTD")) %>% 
  ggplot(aes(RMSE, CC, col = as.factor(month))) +
  geom_point(alpha = 0.5) +
  facet_grid(paste0(origin, "\n", type) ~ 
               paste0(variable, "\n", area), scales = "free_x") +
  theme_bw() +
  scale_alpha(guide = "none") +
  xlab("Root Mean Square Error of Prediction (RMSEP)") +
  ylab("Correlation Coefficient (CC)") +
  scale_colour_viridis_d("Month", labels = c("J", "F", "M", "A", "M", "J", 
                                             "J", "A", "S", "O", "N", "D")) +
  theme(legend.position = "none", axis.text.x = element_text(angle = 90))
ggsave("figures/f02.png", g, dpi = 300, width = 8, height = 8, bg = "white")
g
```

### Precipitation

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "RMSE", variable == "pr") %>% 
  filter(type == "downscaled") %>% 
  ggplot(aes(1, value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Precipitation RMSEP (mm)") +
  ggpubr::stat_compare_means(label.y.npc = 0.9) +
  scale_y_log10()
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "CC", variable == "pr") %>% 
  filter(type == "downscaled") %>% 
  mutate(value = ifelse(value < 0, 0, value)) %>% 
  ggplot(aes(1, 1-value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Precipitation 1-CC (mm)") +
  ggpubr::stat_compare_means(label.y.npc = 0.1) +
  scale_y_log10(labels = scales::comma)
```

### Mean temperature

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "RMSE", variable == "tas") %>% 
  filter(type == "downscaled") %>%  
  ggplot(aes(1, value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Mean temperature RMSEP (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.9) +
  scale_y_log10()
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "CC", variable == "tas") %>% 
  filter(type == "downscaled") %>% 
  mutate(value = ifelse(value < 0, 0, value)) %>% 
  ggplot(aes(1, 1-value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Mean temperature 1-CC (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.1) +
  scale_y_log10(labels = scales::comma)
```

### Maximum temperature

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "RMSE", variable == "tasmax") %>% 
  filter(type == "downscaled") %>% 
  ggplot(aes(1, value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Maximum temperature RMSEP (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.9) +
  scale_y_log10()
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "CC", variable == "tasmax") %>% 
  filter(type == "downscaled") %>% 
  mutate(value = ifelse(value < 0, 0, value)) %>% 
  ggplot(aes(1, 1-value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Maximum temperature 1-CC (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.1) +
  scale_y_log10(labels = scales::comma)
```

### Minimum temperature

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "RMSE", variable == "tasmin") %>% 
  filter(type == "downscaled") %>% 
  ggplot(aes(1, value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Minimum temperature RMSEP (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.9) +
  scale_y_log10()
```

```{r}
#| message: false
#| warning: false
#| fig-cap: "caption."
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(metric == "CC", variable == "tasmin") %>% 
  filter(type == "downscaled") %>% 
  mutate(value = ifelse(value < 0, 0, value)) %>% 
  ggplot(aes(1, 1-value, fill = paste(origin, type))) +
  geom_boxplot(alpha = 0.5) +
  facet_grid(base_eval ~ area, scales = "free") +
  theme_bw() +
  scale_fill_discrete("") +
  theme(legend.position = "bottom", axis.title = element_blank()) +
  ggtitle("Minimum temperature 1-CC (°C)") +
  ggpubr::stat_compare_means(label.y.npc = 0.1) +
  scale_y_log10(labels = scales::comma)
```

### Summary

```{r}
#| message: false
#| warning: false
vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(variable %in% c("tas", "pr")) %>% 
  mutate(variable = recode(variable, 
                           "pr" = "precipitation",
                           "tas" = "temperature")) %>% 
  group_by(area, origin, type, variable, base_eval, metric) %>% 
  summarise(value = round(median(value, na.rm = T), 3)) %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  mutate(value = paste0(RMSE, " (", CC, ")")) %>% 
  select(-CC, -RMSE, -SDE, -bias) %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  knitr::kable()
```

```{r}
#| message: false
#| warning: false
t <- vroom::vroom("results/evaluation/evaluations.tsv") %>% 
  filter(variable %in% c("tas", "pr")) %>% 
  mutate(variable = recode(variable, 
                           "pr" = "precipitation",
                           "tas" = "temperature")) %>% 
  group_by(area, origin, type, variable, base_eval, metric) %>% 
  summarise(value = round(median(value, na.rm = T), 3)) %>% 
  pivot_wider(names_from = metric, values_from = value) %>% 
  mutate(value = paste0(RMSE, " (", CC, ")")) %>% 
  select(-CC, -RMSE, -SDE, -bias) %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  ungroup() %>% 
  filter(base_eval != "chelsa2") %>% 
  mutate(base_eval = toupper(base_eval)) %>% 
  mutate(Evaluation = paste(base_eval, variable)) %>% 
  rename(Country = area, Projection = origin, Raw = raw, Downscaled = downscaled) %>% 
  select(Country, Evaluation, Projection, Raw, Downscaled) %>% 
  arrange(Country, Evaluation, Projection)
write_tsv(t, "figures/t01.tsv")
knitr::kable(t)
```
