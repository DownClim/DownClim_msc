# Introduction {.unnumbered}

The purpose of `DownClim` is to offer a tool for regional and national climate projections including the choice to use mechanistic 'dynamic' downscaling of the CORDEX initiative. `DownClim` is opposed to the single direct statistical downscaling of global climate projections found in WorldClim and CHELSA. `DownClim` is directly inspired of AFRICLIM [@platts2014]. The approach is justified by an improvement in regional projections of CORDEX compared to CMIP (insert few references), although it can increase uncertainty and sometimes be less reliable (insert indian monsoon reference). The tool is an automated `snakemake` workflow easily reproducible and scalable associated to `conda` environments for enhance reproducibility and portability.

As a first step we ran the pipeline for three study countries (French Guiana, Ivory Coast and New Caledonia) over three continents, with a single baseline (CHELSA V2) and all available global (GCM) and regional (RCM) climate models of the area for two experiments (2.6: RCP-2.6 or SSP1-2.6 and 8.5: RCP-8.5 or SSP5-8.5). Behind the choice of countries we have different hypotheses:

-   \(1\) we expect New Caledonia regional topography to be important for projections,
-   \(2\) we expect Ivory Coast regional climates to be important for projections,
-   \(3\) we assume French Guiana to be a control with mainly lowland and homogeneous climate

To demonstrate the aim of the tool, we want to validate and/or assess the projections for each country using:

-   \(1\) projections on observed year from 2005-2020,

-   \(2\) the variation of projected tropical moist forest distribution according on the product and the experiment.

```{r scheme}
#| message: false
#| warning: false
#| fig-cap: "Fig. 1. Study scheme. We first downscaled CMIP6 global climate models (GCMs, ~100km) and CORDEX regional climate models (RCMs, ~50km) for scenarios 2.6 and 8.5 against CHELSA2 (~1km) using bias correction with monthly means of the period 1980-2005. Bias correction consists of adding interpolated differences (anomalies) between climate model predictions to the baseline (here CHELSA2). We then assessed the downscaled projections against monthly means of precipitation (CHIRPS, ~5km) and temperature (GSHTD, ~1km) for the period 2006-2019. Finally, we projected the potential future tropical moist forest (TMF) climate niche for all models and scenarios for the period 2070-2100." #nolint
library(tidyverse)
set.seed(42)
arrow_height <- 28.5
delta_bc <- -1
sd_trajs <- 0.2266
hist_cm <- data.frame(
  year = 1980:2005,
  period = "historical",
  experiment = "historical",
  product = "climate model raw  (~100-50km)"
) %>%
  mutate(mean_temperature = -6.717360 + 0.016125 * year) %>%
  mutate(temperature = mean_temperature + rnorm(n(), 0, sd = sd_trajs))
hist_ref <- hist_cm %>%
  mutate(product = "downscaling product (~1km)") %>%
  mutate(mean_temperature = mean_temperature + delta_bc) %>%
  mutate(temperature = temperature + delta_bc + rnorm(n(), 0, sd = sd_trajs))
eval_ref <- data.frame(
  year = 2006:2019,
  period = "evaluation",
  experiment = "historical",
  product = "evaluation product (~1-5km)"
) %>%
  mutate(mean_temperature = -6.717360 + 0.016125 * year - 0.8) %>%
  mutate(temperature = mean_temperature + rnorm(n(), 0, sd = 0.2266))

proj_26_cm <- data.frame(
  year = 2006:2100,
  period = "projection",
  experiment = "2.6",
  product = "climate model raw  (~100-50km)"
) %>%
  mutate(mean_temperature = 10.9 + 7.357e-03 * year) %>%
  mutate(temperature = mean_temperature + rnorm(n(), 0, sd = 0.2492))
proj_85_cm <- data.frame(
  year = 2006:2100,
  period = "projection",
  experiment = "8.5",
  product = "climate model raw  (~100-50km)"
) %>%
  mutate(mean_temperature = -19.9 + 2.272e-02 * year) %>%
  mutate(temperature = mean_temperature + rnorm(n(), 0, sd = 0.2285))
proj_26_ds <- proj_26_cm %>%
  mutate(product = "climate model downscaled (~1km)") %>%
  mutate(mean_temperature = mean_temperature + delta_bc) %>%
  mutate(temperature = temperature + delta_bc + rnorm(n(), 0, sd = sd_trajs))
proj_85_ds <- proj_85_cm %>%
  mutate(product = "climate model downscaled (~1km)") %>%
  mutate(mean_temperature = mean_temperature + delta_bc) %>%
  mutate(temperature = temperature + delta_bc + rnorm(n(), 0, sd = sd_trajs))
g <- bind_rows(
  hist_cm,
  hist_ref,
  eval_ref,
  proj_26_cm,
  proj_85_cm,
  proj_26_ds,
  proj_85_ds
) %>%
  ggplot(aes(x = year)) +
  geom_line(aes(
    y = temperature, col = product,
    group = paste(period, experiment, product)
  ), alpha = .5) +
  geom_line(aes(
    y = mean_temperature, col = product,
    group = paste(period, experiment, product)
  ), linewidth = 1.1) +
  theme_bw() +
  ylab("Temperature (Â°C)") +
  scale_colour_discrete("") +
  theme(legend.position = "bottom", axis.title.x = element_blank()) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 1980, xend = 2005,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 2005, xend = 1980,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 2006, xend = 2019,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 2019, xend = 2006,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 2020, xend = 2100,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "darkgrey",
    data.frame(
      x = 2100, xend = 2020,
      y = arrow_height, yend = arrow_height
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  annotate("text",
    x = 1990, y = arrow_height - 0.25,
    label = "Downscaling", col = "darkgrey"
  ) +
  annotate("text",
    x = 1990, y = arrow_height - 0.5,
    label = "italic('CHELSA2')",
    parse = TRUE, size = 3, col = "darkgrey"
  ) +
  annotate("text",
    x = 2012, y = arrow_height - 0.25,
    label = "Evaluation", col = "darkgrey"
  ) +
  annotate("text",
    x = 2012, y = arrow_height - 0.5,
    label = "italic('CHIRPS, GSHTD')",
    parse = TRUE, size = 3, col = "darkgrey"
  ) +
  annotate("text",
    x = 2060, y = arrow_height - 0.25,
    label = "Downscaled projection", col = "darkgrey"
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "black", size = 1.1,
    data.frame(
      x = 1991, xend = 1991,
      y = 25.2, yend = 24.5
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "black", size = 1.1,
    data.frame(
      x = 2020, xend = 2020,
      y = 24.5, yend = 25.2
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
    col = "black", size = 1.1,
    data.frame(
      x = 2020, xend = 2020,
      y = 25.2, yend = 24.5
    ),
    arrow = arrow(length = unit(0.2, "cm"))
  ) +
  guides(col = guide_legend(nrow = 2, byrow = TRUE)) +
  annotate("text",
    x = 2108, y = 27.9,
    label = "8.5~W~m^{-~2}", parse = TRUE, col = "#7cae00", size = 3
  ) +
  annotate("text",
    x = 2108, y = 26.4,
    label = "2.6~W~m^{-~2}", parse = TRUE, col = "#7cae00", size = 3
  ) +
  annotate("text",
    x = 2108, y = 27,
    label = "8.5~W~m^{-~2}", parse = TRUE, col = "#f8766d", size = 3
  ) +
  annotate("text",
    x = 2108, y = 25.5,
    label = "2.6~W~m^{-~2}", parse = TRUE, col = "#f8766d", size = 3
  )
ggsave("figures/f01.png", g, bg = "white", dpi = 800, height = 4, width = 7)
g
```

## Poeple

-   Sylvain Schmitt (sylvain.schmitt\@cirad.fr)
-   Ghislain Vieilledent (ghislain.vieilledent\@cirad.fr)
-   Thomas Arsouze (thomas.arsouze\@cirad.fr)
-   Achille Mauri (mauri.achille\@gmail.com)
